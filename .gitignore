# Compiled source #
###################
**/*.com
**/*.class
**/*.dll
**/*.exe
**/*.o
**/*.so
**/*.pyc
Photo.run
Clima.run
PHOTOCHEM/OBJECTFILES/*
CLIMA/OBJECT_CLIMA/*
PHOTOCHEM/OBJECT_PHOT/*

# Runtime I/O files for Atmos models #
#####################################
PHOTOCHEM/OUTPUT/*
PHOTOCHEM/profile.pt
PHOTOCHEM/in.dist
PHOTOCHEM/PTZ_mixingratios_in.dist
PHOTOCHEM/INPUTFILES/parameters.inc
PHOTOCHEM/INPUTFILES/reactions.rx
PHOTOCHEM/INPUTFILES/species.dat
PHOTOCHEM/INPUTFILES/input_photochem.dat
PHOTOCHEM/INPUTFILES/PLANET.dat
PHOTOCHEM/INPUTFILES/input_photchem.dat
COUPLE/*
photochem_smart/atm/tag.atm
photochem_smart/photchem/photfile.pt
CLIMA/IO/TempOut.dat
CLIMA/IO/TempIn.dat
CLIMA/IO/clima_allout.tab
CLIMA/IO/clima_last.tab
CLIMA/IO/SolarHeating.tab
CLIMA/IO/IR_wavelength_grid.tab
CLIMA/IO/FTIR.dat
CLIMA/IO/FTSO.dat
CLIMA/IO/input_clima.dat


# Fortran detritus #
####################
**/fort.*
# note fort. files indicate user error. something is writing to a file unit that hasn't been opened. so if you see fort.### files, why not be a good citizen and find/remove the resulting write statement rather than ignore them...



# Model Output Files #
######################
**/*.tab
#not exactly sure why this is here. There are some .tab files, but they are all checked in. revisit me at some point.


# Hitran linelists should never be added (they are big!) #
##########################################################
**/.par
*.par
*/*.par
*/*/*.par

#emacs autosave files#
######################
**/*~
**/*#

# Packages #
############
# it's better to unpack these files and commit the raw source
# git has its own built in compression methods
**/*.7z
**/*.dmg
**/*.gz
**/*.iso
**/*.jar
**/*.rar
**/*.tar
**/*.zip

# Logs and databases #
######################
**/*.log
**/*.sql
**/*.sqlite

# OS generated files #
######################
**/.DS_Store
**/.DS_Store?
**/._*
**/.Spotlight-V100
**/.Trashes
**/ehthumbs.db
**/Thumbs.db

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Pipenv
Pipfile.lock
.idea/
.Trash-0/

#Folders
readings/

#Kite
*.swp

#images
*.jpg
